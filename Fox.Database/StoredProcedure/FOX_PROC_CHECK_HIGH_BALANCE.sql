IF (OBJECT_ID('FOX_PROC_CHECK_HIGH_BALANCE') IS NOT NULL ) DROP PROCEDURE FOX_PROC_CHECK_HIGH_BALANCE_OF_PATIENT  
GO   
Create PROCEDURE [dbo].[FOX_PROC_CHECK_HIGH_BALANCE]                    
 @PRACTICE_CODE BIGINT ,    
 @CASE_NAME varchar(50)                   
AS                    
BEGIN           
          
 if(@CASE_NAME='Insurance Balance')    
  begin    
	IF OBJECT_ID('TEMPDB..#INSPAY00') IS NOT NULL       
     DROP TABLE #INSPAY00      
      
SELECT C.PATIENT_ACCOUNT,SUM(AMT_DUE) AMT_DUE       
INTO #INSPAY00      
FROM PATIENT P WITH (NOLOCK)  
JOIN CLAIMS C ON C.PATIENT_ACCOUNT = P.PATIENT_ACCOUNT AND ISNULL(C.DELETED,0) = 0      
WHERE P.PRACTICE_CODE = @PRACTICE_CODE      
AND ISNULL(P.DELETED,0) = 0      
AND ISNULL(C.PTL_STATUS,0) = 0      
AND (      
ISNULL(C.PRI_STATUS,'') IN ('N','R','B','D') OR      
ISNULL(C.SEC_STATUS,'') IN ('N','R','B','D') OR      
ISNULL(C.OTH_STATUS,'') IN ('N','R','B','D')      
)      
GROUP BY  C.PATIENT_ACCOUNT      
HAVING SUM(AMT_DUE) > 4000      
      
IF OBJECT_ID('TEMPDB..#INSPAY') IS NOT NULL       
  DROP TABLE #INSPAY      
SELECT *       
INTO #INSPAY      
FROM #INSPAY00    WITH (NOLOCK)    
WHERE PATIENT_ACCOUNT NOT IN (      
SELECT DISTINCT P.PATIENT_ACCOUNT FROM #INSPAY00 P      
JOIN AF_TBL_PATIENT_ADDITIONAL_INFO AD ON AD.PATIENT_ACCOUNT = P.PATIENT_ACCOUNT AND ISNULL(AD.DELETED,0) = 0       
AND ISNULL(AD.PATIENT_STATUS,'') IN  ('INACTIVE','EXPIRED')      
)      
      
IF OBJECT_ID('TEMPDB..#INSPAIDDATE') IS NOT NULL       
    DROP TABLE #INSPAIDDATE 
	     
		SELECT ISNULL(MAX(CP.CREATED_DATE),'2010-12-31 00:00:00.000') LAST_PAYMENT_DATE ,IPA.PATIENT_ACCOUNT      
		INTO #INSPAIDDATE      
		FROM #INSPAY IPA   WITH (NOLOCK)    
		JOIN CLAIMS C ON C.PATIENT_ACCOUNT = IPA.PATIENT_ACCOUNT AND ISNULL(C.DELETED,0) = 0      
		LEFT JOIN CLAIM_PAYMENTS CP ON CP.CLAIM_NO = C.CLAIM_NO AND ISNULL(CP.DELETED,0) = 0 AND CP.AMOUNT_PAID > 0      
		GROUP BY IPA.PATIENT_ACCOUNT      
      
      
	IF OBJECT_ID('TEMPDB..#INSAMT') IS NOT NULL       
	   DROP TABLE #INSAMT    
	     
	SELECT *       
	INTO #INSAMT      
	FROM #INSPAY WITH (NOLOCK)       
	WHERE PATIENT_ACCOUNT NOT IN (      
	SELECT DISTINCT  PATIENT_ACCOUNT FROM #INSPAIDDATE WITH (NOLOCK)   WHERE LAST_PAYMENT_DATE > GETDATE() - 45      
	)      
     SELECT *,'INSURANCE' AMOUNTRESP FROM #INSAMT  WITH (NOLOCK)  
      ORDER BY 2    
   end  
if(@CASE_NAME='Patient Balance')    
  begin    
		IF OBJECT_ID('TEMPDB..#PATPAY00') IS NOT NULL       
		DROP TABLE #PATPAY00    
		  
		SELECT  C.PATIENT_ACCOUNT ,SUM(AMT_DUE) AMT_DUE      
		INTO #PATPAY00      
		FROM PATIENT P  WITH (NOLOCK)      
		JOIN CLAIMS C ON C.PATIENT_ACCOUNT = P.PATIENT_ACCOUNT AND ISNULL(C.DELETED,0) = 0      
		WHERE P.PRACTICE_CODE = @PRACTICE_CODE      
		AND ISNULL(P.DELETED,0) = 0      
		AND ISNULL(C.PTL_STATUS,0) = 0      
		AND ISNULL(C.PAT_STATUS,'') IN ('N','R','B','D')      
		GROUP BY  C.PATIENT_ACCOUNT      
		HAVING SUM(AMT_DUE) > 4000      
      
		IF OBJECT_ID('TEMPDB..#PATPAY') IS NOT NULL       
		DROP TABLE #PATPAY 
		     
		SELECT *       
		INTO #PATPAY      
		FROM #PATPAY00  WITH (NOLOCK)      
		WHERE PATIENT_ACCOUNT NOT IN (      
		SELECT DISTINCT P.PATIENT_ACCOUNT FROM #PATPAY00 P      
		JOIN AF_TBL_PATIENT_ADDITIONAL_INFO AD ON AD.PATIENT_ACCOUNT = P.PATIENT_ACCOUNT AND ISNULL(AD.DELETED,0) = 0       
		AND ISNULL(AD.PATIENT_STATUS,'') IN  ('INACTIVE','EXPIRED')      
		)      
      
      
		IF OBJECT_ID('TEMPDB..#PATPAIDDATE') IS NOT NULL       
		DROP TABLE #PATPAIDDATE 
		     
		SELECT ISNULL(MAX(CP.CREATED_DATE),'2010-12-31 00:00:00.000') LAST_PAYMENT_DATE ,IPA.PATIENT_ACCOUNT      
		INTO #PATPAIDDATE      
		FROM #PATPAY IPA WITH (NOLOCK)       
		JOIN CLAIMS C ON C.PATIENT_ACCOUNT = IPA.PATIENT_ACCOUNT AND ISNULL(C.DELETED,0) = 0      
		LEFT JOIN CLAIM_PAYMENTS CP ON CP.CLAIM_NO = C.CLAIM_NO AND ISNULL(CP.DELETED,0) = 0 AND CP.AMOUNT_PAID > 0      
		GROUP BY IPA.PATIENT_ACCOUNT      
      
		IF OBJECT_ID('TEMPDB..#PATAMT') IS NOT NULL       
		DROP TABLE #PATAMT
		      
		SELECT *       
		INTO #PATAMT      
		FROM #PATPAY WITH (NOLOCK)    
		WHERE PATIENT_ACCOUNT NOT IN (      
		SELECT DISTINCT  PATIENT_ACCOUNT FROM #PATPAIDDATE WITH (NOLOCK)  WHERE LAST_PAYMENT_DATE > GETDATE() - 45      
		)      
		 SELECT *,'PATIENT' AMOUNTRESP FROM #PATAMT WITH (NOLOCK)       
		 ORDER BY 2      
		  end      
END 


