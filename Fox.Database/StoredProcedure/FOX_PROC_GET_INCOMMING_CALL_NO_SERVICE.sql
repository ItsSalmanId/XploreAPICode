IF (OBJECT_ID('FOX_PROC_GET_INCOMMING_CALL_NO_SERVICE') IS NOT NULL ) DROP PROCEDURE FOX_PROC_GET_INCOMMING_CALL_NO_SERVICE  
GO             
--[DBO].[FOX_PROC_GET_INCOMMING_CALL_NO_SERVICE] '06/23/2022', '06/23/2022'            
CREATE PROCEDURE FOX_PROC_GET_INCOMMING_CALL_NO_SERVICE              
(              
@DATE_FROM DATETIME,             
@DATE_TO DATETIME              
)              
AS              
BEGIN              
IF OBJECT_ID('TEMPDB.DBO.#TEMPRECORDINGPHDCALLRECORDING', 'U') IS NOT NULL DROP TABLE #TEMPRECORDINGPHDCALLRECORDING;                         
IF OBJECT_ID('TEMPDB.DBO.#TEMPRECORDINGFORGROUP', 'U') IS NOT NULL DROP TABLE #TEMPRECORDINGFORGROUP;                         
    
SELECT CD.INCOMING_CALL_NO INTO #TEMPRECORDINGPHDCALLRECORDING FROM FOX_TBL_PHD_CALL_DETAILS  AS CD             
WHERE CONVERT(DATE, CD.CREATED_DATE, 101) BETWEEN CONVERT(DATE, @DATE_FROM, 101) AND CONVERT(DATE, @DATE_TO, 101)             
AND ISNULL(CD.CALL_RECORDING_PATH,'') = '' AND ISNULL(CD.INCOMING_CALL_NO, '') <> ''            
AND ISNULL(CD.DELETED,0)=0        
    
SELECT INCOMING_CALL_NO INTO #TEMPRECORDINGFORGROUP FROM FOX_TBL_PHD_CALL_DETAILS     
WHERE CONVERT(DATE, CREATED_DATE, 101) = CONVERT(DATE, @DATE_FROM, 101) AND ISNULL(CALL_RECORDING_PATH,'') = ''      
GROUP BY INCOMING_CALL_NO HAVING COUNT(INCOMING_CALL_NO) > 1    
    
    
SELECT CD.INCOMING_CALL_NO FROM #TEMPRECORDINGPHDCALLRECORDING AS CD             
WHERE INCOMING_CALL_NO NOT IN (SELECT INCOMING_CALL_NO FROM #TEMPRECORDINGFORGROUP)    
AND INCOMING_CALL_NO NOT IN       
(SELECT CA.INCOMING_CALL_NO FROM FOX_TBL_CRAWLER_AVAYA_RECORDING_NOT_FOUND_LOGS AS CA      
WHERE CA.INCOMING_CALL_NO = CD.INCOMING_CALL_NO AND CONVERT(DATE, CA.RECORDING_FOR_DATE, 101) = CONVERT(DATE, @DATE_FROM, 101))       
    
END 