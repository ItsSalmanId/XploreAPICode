IF (OBJECT_ID('FOX_PROC_GET_PHR_LAST_LOGIN_USER_REPORT') IS NOT NULL ) DROP PROCEDURE FOX_PROC_GET_PHR_LAST_LOGIN_USER_REPORT  
GO   
-- =============================================      
-- AUTHOR:  MUHAMMAD ARSLAN TUFAIL      
-- CREATE DATE: 02/01/2022      
-- DESCRIPTION: THIS SP IS TRIGGER TO GET PHR USER LAST LOGIN DETAILS      
-- =============================================         
-- FOX_PROC_GET_PHR_LAST_LOGIN_USER_REPORT  1011163, '01/28/2022', '02/04/2022', '1', '100', '', 'LAST_LOGIN_DATE', 'DESC'        
CREATE PROCEDURE [dbo].[FOX_PROC_GET_PHR_LAST_LOGIN_USER_REPORT]       
 -- ADD THE PARAMETERS FOR THE STORED PROCEDURE HERE      
 @PRACTICE_CODE BIGINT,    
 @DATE_FROM DATETIME,     
 @DATE_TO DATETIME,    
 @CURRENT_PAGE INT,    
 @RECORD_PER_PAGE INT,    
 @SEARCH_TEXT VARCHAR(100),    
 @SORT_BY VARCHAR(50),    
 @SORT_ORDER VARCHAR(5)    
AS      
BEGIN      
     
 SET @CURRENT_PAGE = @CURRENT_PAGE - 1    
 DECLARE @START_FROM INT = @CURRENT_PAGE * @RECORD_PER_PAGE    
 DECLARE @TOTAL_PAGESUM FLOAT;    
    
 SELECT @TOTAL_PAGESUM = COUNT(*)    
 FROM PATIENT AS P      
 INNER JOIN FOX_TBL_PATIENT AS TP ON TP.PATIENT_ACCOUNT = P.PATIENT_ACCOUNT      
 INNER JOIN WS_FOX_TBL_PHR_USERS AS PU ON PU.PATIENT_ACCOUNT = TP.PATIENT_ACCOUNT      
 WHERE PU.PRACTICE_CODE = @PRACTICE_CODE     
 AND ISNULL(PU.LAST_LOGIN_DATE, '') <> '' AND ISNULL(P.EMAIL_ADDRESS, '') <> ''    
 AND PU.DELETED = 0      
 AND (@DATE_FROM IS NULL OR @DATE_TO IS NULL OR CONVERT(DATE, PU.LAST_LOGIN_DATE, 101) BETWEEN CONVERT(DATE,@DATE_FROM, 101) AND CONVERT(DATE, @DATE_TO, 101))    
 AND     
 (    
 @SEARCH_TEXT = ''     
 OR     
 (    
 PU.PATIENT_ACCOUNT LIKE '%' + @SEARCH_TEXT + '%'    
 OR P.Chart_Id LIKE '%' + @SEARCH_TEXT + '%'    
 OR P.FIRST_NAME LIKE '%' + @SEARCH_TEXT + '%'    
 OR P.LAST_NAME LIKE '%' + @SEARCH_TEXT + '%'    
 OR P.EMAIL_ADDRESS LIKE '%' + @SEARCH_TEXT + '%'    
 OR CONVERT(VARCHAR, PU.LAST_LOGIN_DATE, 101) LIKE '%' + @SEARCH_TEXT + '%'    
 OR CONVERT(VARCHAR, PU.LAST_LOGIN_DATE, 100) LIKE '%' + @SEARCH_TEXT + '%'    
 )    
 )    
    
 IF(@RECORD_PER_PAGE = 0)      
  BEGIN      
   SET @RECORD_PER_PAGE = @TOTAL_PAGESUM;      
        END;      
 ELSE      
  BEGIN      
      SET @RECORD_PER_PAGE = @RECORD_PER_PAGE;      
  END;      
      
 DECLARE @TOTAL_RECORDS INT= @TOTAL_PAGESUM;      
 SET @TOTAL_PAGESUM = CEILING(@TOTAL_PAGESUM / @RECORD_PER_PAGE);      
    
 SELECT *,       
         @TOTAL_PAGESUM AS TOTAL_RECORD_PAGES,       
   @TOTAL_RECORDS AS TOTAL_RECORDS      
         FROM      
   (    
    SELECT     
    ROW_NUMBER() OVER ( ORDER BY PU.MODIFIED_DATE DESC ) AS ACTIVEROW      
    ,PU.USER_ID      
   , PU.PATIENT_ACCOUNT      
   , P.CHART_ID AS MRN      
   , P.FIRST_NAME       
   , P.LAST_NAME       
   , P.EMAIL_ADDRESS  AS EMAIL    
   , PU.PRACTICE_CODE      
   , PU.LAST_LOGIN_DATE      
   FROM       
   PATIENT AS P      
   INNER JOIN FOX_TBL_PATIENT AS TP ON TP.PATIENT_ACCOUNT = P.PATIENT_ACCOUNT      
   INNER JOIN WS_FOX_TBL_PHR_USERS AS PU ON PU.PATIENT_ACCOUNT = TP.PATIENT_ACCOUNT      
   WHERE PU.PRACTICE_CODE = @PRACTICE_CODE     
   AND ISNULL(PU.LAST_LOGIN_DATE, '') <> '' AND ISNULL(P.EMAIL_ADDRESS, '') <> ''    
   AND PU.DELETED = 0      
   AND (@DATE_FROM IS NULL OR @DATE_TO IS NULL OR CONVERT(DATE, PU.LAST_LOGIN_DATE, 101) BETWEEN CONVERT(DATE,@DATE_FROM, 101) AND CONVERT(dATE, @DATE_TO, 101))    
   AND     
   (    
   @SEARCH_TEXT = ''     
   OR     
   (    
   PU.PATIENT_ACCOUNT LIKE '%' + @SEARCH_TEXT + '%'    
   OR P.Chart_Id LIKE '%' + @SEARCH_TEXT + '%'    
   OR P.FIRST_NAME LIKE '%' + @SEARCH_TEXT + '%'    
   OR P.LAST_NAME LIKE '%' + @SEARCH_TEXT + '%'    
   OR P.EMAIL_ADDRESS LIKE '%' + @SEARCH_TEXT + '%'    
   OR PU.LAST_LOGIN_DATE LIKE '%' + @SEARCH_TEXT + '%'    
   OR CONVERT(VARCHAR, PU.LAST_LOGIN_DATE, 101) LIKE '%' + @SEARCH_TEXT + '%'    
   OR CONVERT(VARCHAR, PU.LAST_LOGIN_DATE, 100) LIKE '%' + @SEARCH_TEXT + '%'    
   )    
   )    
   ) AS FOX_TBL_GROUP_PATIENT    
   ORDER BY     
   CASE    
   WHEN @SORT_BY = 'PATIENT_ACCOUNT' AND @SORT_ORDER = 'ASC'    
   THEN PATIENT_ACCOUNT    
   END ASC,     
         CASE    
   WHEN @SORT_BY = 'PATIENT_ACCOUNT' AND @SORT_ORDER = 'DESC'    
   THEN PATIENT_ACCOUNT    
   END DESC,     
   CASE    
   WHEN @SORT_BY = 'MRN' AND @SORT_ORDER = 'ASC'    
   THEN MRN    
   END ASC,     
         CASE    
   WHEN @SORT_BY = 'MRN' AND @SORT_ORDER = 'DESC'     THEN MRN    
   END DESC,     
   CASE    
   WHEN @SORT_BY = 'FIRST_NAME' AND @SORT_ORDER = 'ASC'    
   THEN FIRST_NAME    
   END ASC,     
         CASE    
   WHEN @SORT_BY = 'FIRST_NAME' AND @SORT_ORDER = 'DESC'    
   THEN FIRST_NAME    
   END DESC,     
   CASE    
   WHEN @SORT_BY = 'LAST_NAME' AND @SORT_ORDER = 'ASC'    
   THEN LAST_NAME    
   END ASC,     
         CASE    
   WHEN @SORT_BY = 'LAST_NAME' AND @SORT_ORDER = 'DESC'    
   THEN LAST_NAME    
   END DESC,     
   CASE    
   WHEN @SORT_BY = 'EMAIL_ADDRESS' AND @SORT_ORDER = 'ASC'    
   THEN EMAIL    
   END ASC,     
         CASE    
   WHEN @SORT_BY = 'EMAIL_ADDRESS' AND @SORT_ORDER = 'DESC'    
   THEN EMAIL    
   END DESC,     
   CASE    
   WHEN @SORT_BY = 'LAST_LOGIN_DATE' AND @SORT_ORDER = 'ASC'    
   THEN LAST_LOGIN_DATE    
   END ASC,     
         CASE    
   WHEN @SORT_BY = 'LAST_LOGIN_DATE' AND @SORT_ORDER = 'DESC'    
   THEN LAST_LOGIN_DATE    
   END DESC    
       
 OFFSET @START_FROM ROWS FETCH NEXT @RECORD_PER_PAGE ROWS ONLY;      
    
END 
