IF (OBJECT_ID('FOX_GET_TASK_REPORT') IS NOT NULL ) DROP PROCEDURE FOX_GET_TASK_REPORT  
GO 
  -- =============================================      
-- AUTHOR:  <SR.DEVELOPER, MUHAMMAD JOHAR>      
-- CREATE DATE: <CREATE DATE, 07/13/2018>      
-- DESCRIPTION: <GET TASK REPORT LIST>           
  -- exec dbo.FOX_GET_TASK_REPORT '2017-01-01 12:01:01.000',null,1011163,'ALL',1, 200, '', 'PENDING','desc'      
 CREATE PROCEDURE FOX_GET_TASK_REPORT     
  @DATE_FROM DATETIME,      
  @DATE_TO DATETIME,      
  @PRACTICE_CODE BIGINT,      
  @ROLE varchar(50)=null,      
  @CURRENT_PAGE INT,              
  @RECORD_PER_PAGE INT,       
  @SEARCH_STRING VARCHAR(50),      
  @SORT_ORDER VARCHAR(50),       
  @SORT_BY VARCHAR(50)      
 AS      
 BEGIN      
 --select * from fox_tbl_work_queue where assigned_to = 'hameed_5443568'      
 --DECLARE @DATE_FROM DATETIME    ='2017-01-06 09:09:10.727'      
 --DECLARE @DATE_TO DATETIME    ='2018-06-06 09:09:10.727'      
 -- DECLARE @PRACTICE_CODE BIGINT   =1011163      
 -- DECLARE @ROLE varchar(50)  ='ALL'      
 -- DECLARE @CURRENT_PAGE INT         =1      
 -- DECLARE @RECORD_PER_PAGE INT    =50      
 -- DECLARE @SEARCH_STRING VARCHAR(50) =''      
 -- DECLARE @SORT_BY VARCHAR(50)   ='ROLE_NAME'      
 -- DECLARE @SORT_ORDER VARCHAR(50)   ='asc'      
      
      
      
IF(upper(@ROLE) = 'ALL')      
begin      
set @ROLE = null      
end      
IF(@DATE_FROM is null or @DATE_FROM = '')      
begin      
 set  @DATE_FROM =  DATEADD(YEAR,-2,DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) -6, 0))      
end      
IF(@DATE_TO is null or @DATE_TO = '')      
begin      
  set  @DATE_TO =  GETDATE()      
end      
IF OBJECT_ID('TEMPDB.DBO.#TIME_ELAPSED_COMPLETION', 'U') IS NOT NULL DROP TABLE #TIME_ELAPSED_COMPLETION       
IF OBJECT_ID('TEMPDB.DBO.#TEMPA', 'U') IS NOT NULL DROP TABLE #TEMPA       
IF OBJECT_ID('TEMPDB.DBO.#FINALTEMP', 'U') IS NOT NULL DROP TABLE #FINALTEMP       
IF OBJECT_ID('TEMPDB.DBO.#WORKQUEUEFILTEREDRECORDS', 'U') IS NOT NULL DROP TABLE #WORKQUEUEFILTEREDRECORDS       
IF OBJECT_ID('TEMPDB.DBO.#FINALTEMP1', 'U') IS NOT NULL DROP TABLE #FINALTEMP1      
IF OBJECT_ID('TEMPDB.DBO.#JoharTemp', 'U') IS NOT NULL DROP TABLE #JoharTemp      
      
      
 SELECT *  INTO #WORKQUEUEFILTEREDRECORDS       
FROM FOX_TBL_WORK_QUEUE WHERE      
 convert(datetime,RECEIVE_DATE) >=convert(datetime,@DATE_FROM)                                
  AND   convert(datetime,RECEIVE_DATE)  <=  convert(datetime,@DATE_TO)       
  AND WORK_STATUS = 'COMPLETED' and  isnull(deleted,0)=0      
 ------------------------------------QURIES-------------------------      
  -----#TIME_ELAPSED_COMPLETION_TIME      
IF OBJECT_ID('TEMPDB.DBO.#TOTALTIMEINSECONDS', 'U') IS NOT NULL DROP TABLE #TOTALTIMEINSECONDS       
 SELECT (CONVERT(BIGINT,        
DATEDIFF(MINUTE, CONVERT(DATETIME,RECEIVE_DATE), CONVERT(DATETIME,COMPLETED_DATE))))       
TOTALTIMEINSECONDS,RECEIVE_DATE,COMPLETED_DATE,ASSIGNED_TO INTO #TOTALTIMEINSECONDS       
      
FROM #WORKQUEUEFILTEREDRECORDS      
      
IF OBJECT_ID('TEMPDB.DBO.#TIME_ELAPSED_COMPLETION_TIME', 'U') IS NOT NULL DROP TABLE #TIME_ELAPSED_COMPLETION_TIME      
SELECT       
ASSIGNED_TO ,      
sum(TOTALTIMEINSECONDS) AS GRANDTOTAL  INTO #TIME_ELAPSED_COMPLETION_TIME      
FROM #TOTALTIMEINSECONDS       
GROUP BY ASSIGNED_TO      
--ORDER BY CONVERT(DATE,RECEIVE_DATE) ASC      
      
      
      
-- RECIEVE TO COMPLETION AVERAGE TIME      
IF OBJECT_ID('TEMPDB.DBO.#TOTALTIMEINSECONDSRECIEVECOMPETION', 'U') IS NOT NULL DROP TABLE #TOTALTIMEINSECONDSRECIEVECOMPETION       
SELECT (CONVERT(BIGINT, DATEDIFF(SS, CONVERT(DATETIME,RECEIVE_DATE), CONVERT(DATETIME,COMPLETED_DATE)))) TOTALTIMEINSECONDS,      
CASE WHEN ISNULL((CONVERT(BIGINT, DATEDIFF(SS, CONVERT(DATETIME,RECEIVE_DATE), CONVERT(DATETIME,COMPLETED_DATE)))),0)>0 THEN 1 ELSE 0 END COMPLETEFILESCOUNT,      
RECEIVE_DATE,AGENT_ASSIGN_DATE,ASSIGNED_TO INTO #TOTALTIMEINSECONDSRECIEVECOMPETION       
FROM #WORKQUEUEFILTEREDRECORDS      
      
      
IF OBJECT_ID('TEMPDB.DBO.#TOTALTIMEINSECONDRECIEVEAVERAGECOMPETION', 'U') IS NOT NULL DROP TABLE #TOTALTIMEINSECONDRECIEVEAVERAGECOMPETION      SELECT ASSIGNED_TO, SUM(TOTALTIMEINSECONDS)/NULLIF(SUM(COMPLETEFILESCOUNT),0) AVERAGE , COUNT(*) TOTALFILES IN
TO #TOTALTIMEINSECONDRECIEVEAVERAGECOMPETION       
FROM #TOTALTIMEINSECONDSRECIEVECOMPETION      
GROUP BY ASSIGNED_TO      
--ORDER BY CONVERT(DATE,RECEIVE_DATE) ASC      
      
      
IF OBJECT_ID('TEMPDB.DBO.#FINALRECIEVEAVERAGEIMECOMPETIONINHHMSS', 'U') IS NOT NULL DROP TABLE #FINALRECIEVEAVERAGEIMECOMPETIONINHHMSS       
SELECT ASSIGNED_TO, AVERAGE TOTALAVERAGE_RECIEVE,       
CASE WHEN       
CONVERT(VARCHAR, (AVERAGE)/3600 ) <10 THEN '0' + CONVERT(VARCHAR, (AVERAGE)/3600 ) ELSE       
CONVERT(VARCHAR, (AVERAGE)/3600 ) END      
 +':'+      
CASE WHEN       
CONVERT(VARCHAR, CONVERT(BIGINT, AVERAGE)%3600/60) <10 THEN '0' + CONVERT(VARCHAR, CONVERT(BIGINT, AVERAGE)%3600/60) ELSE       
CONVERT(VARCHAR, CONVERT(BIGINT, AVERAGE)%3600/60) END      
+':'+      
 CASE WHEN       
CONVERT(VARCHAR,CONVERT(BIGINT, AVERAGE)%60)<10  THEN '0' + CONVERT(VARCHAR,CONVERT(BIGINT, AVERAGE)%60) ELSE       
CONVERT(VARCHAR,CONVERT(BIGINT, AVERAGE)%60) END 'AVERAGE_RECIEVETO_COMLETIONTIME'  INTO #FINALRECIEVEAVERAGEIMECOMPETIONINHHMSS FROM #TOTALTIMEINSECONDRECIEVEAVERAGECOMPETION      
      
      
IF OBJECT_ID('TEMPDB.DBO.#PAGINATION_TBL') IS NOT NULL DROP TABLE #PAGINATION_TBL       
IF OBJECT_ID('TEMPDB.DBO.##TIME_ELAPSED_COMPLETION') IS NOT NULL DROP TABLE #TIME_ELAPSED_COMPLETION       
--SELECT ROW_NUMBER() OVER(ORDER BY T.DATE DESC) AS ROW, * INTO #PAGINATION_TBL FROM (      
      
SELECT      
A.GRANDTOTAL,E.AVERAGE_RECIEVETO_COMLETIONTIME,A.ASSIGNED_TO      
INTO #TIME_ELAPSED_COMPLETION      
FROM #TIME_ELAPSED_COMPLETION_TIME A      
LEFT JOIN #FINALRECIEVEAVERAGEIMECOMPETIONINHHMSS E ON A.ASSIGNED_TO= E.ASSIGNED_TO      
DECLARE @ROLE_ID  bigint,      
        @IS_ROLE_NULL BIT      
If(@ROLE = 'AGENT')      
begin      
set @ROLE_ID = 100      
end      
If(@ROLE = 'INDEXER')      
begin      
set @ROLE_ID  = 101      
end      
If(@ROLE = 'SUPERVISOR')      
begin      
set @ROLE_ID = 102      
end      
if(@ROLE IS NULL)      
begin      
set @IS_ROLE_NULL = 1      
end      
      
      
      
SELECT (SELECT  (LTRIM(R.FIRST_NAME))+' '+(RTRIM(R.LAST_NAME)) WHERE  W.ASSIGNED_TO = R.USER_NAME) AS ASSIGNED_USER ,E.ROLE_NAME,W.WORK_STATUS,W.RECEIVE_DATE,w.ASSIGNED_TO,W.IS_TRASH_REFERRAL AS IS_TRASH_REFERRAL      
INTO #TEMPA      
FROM FOX_TBL_WORK_QUEUE  W       
 --LEFT JOIN FOX_TBL_WORK_ORDER_ADDTIONAL_INFO WQAI ON WQAI.WORK_ID = W.WORK_ID AND WQAI.DELETED = 0      
JOIN  FOX_TBL_APPLICATION_USER R ON R.USER_NAME = W.ASSIGNED_TO       
LEFT JOIN FOX_TBL_ROLE E ON E.ROLE_ID =r.ROLE_ID      
WHERE convert(datetime,RECEIVE_DATE) between convert(datetime,@DATE_FROM) and convert(datetime,@DATE_TO)  and ISNULL(W.DELETED,0) = 0 AND W.PRACTICE_CODE = @PRACTICE_CODE AND UPPER(ROLE_NAME) <>'ADMINISTRATOR'       
AND UPPER(ROLE_NAME) <>'Account Manager' and R.IS_ACTIVE = 1      
      
      
SELECT  DISTINCT WORK_STATUS,      
ASSIGNED_USER ,t.ASSIGNED_TO,ROLE_NAME,(SELECT COUNT(*) FROM #TEMPA WHERE ASSIGNED_TO = T.ASSIGNED_TO and ASSIGNED_TO is not null ) AS ASSIGNED,      
(SELECT COUNT(*) FROM #TEMPA WHERE ASSIGNED_TO = T.ASSIGNED_TO AND upper(WORK_STATUS) !='COMPLETED' AND T.ASSIGNED_TO is not null) AS PENDING,      
(SELECT COUNT(*) FROM #TEMPA WHERE ASSIGNED_TO = T.ASSIGNED_TO AND upper(WORK_STATUS) !='COMPLETED' AND T.ASSIGNED_TO is not null AND ISNULL(IS_TRASH_REFERRAL,0) =1) AS TRASHED_REFERRAL,      
(SELECT COUNT(*) FROM #TEMPA WHERE ASSIGNED_TO = T.ASSIGNED_TO AND upper(WORK_STATUS) !='COMPLETED' AND T.ASSIGNED_TO is not null AND ISNULL(IS_TRASH_REFERRAL,0) =0) AS VALID_REFERRAL,      
(SELECT COUNT(*) FROM #TEMPA WHERE ASSIGNED_TO = T.ASSIGNED_TO AND WORK_STATUS='COMPLETED') AS COMPLETED,TE.AVERAGE_RECIEVETO_COMLETIONTIME       
INTO #FINALTEMP1      
FROM       
#TEMPA T      
LEFT JOIN #TIME_ELAPSED_COMPLETION TE ON T.ASSIGNED_TO = TE.ASSIGNED_TO      
      
SELECT DISTINCT ASSIGNED_USER, ASSIGNED_TO, ROLE_NAME, ASSIGNED, PENDING, COMPLETED, AVERAGE_RECIEVETO_COMLETIONTIME ,TRASHED_REFERRAL,VALID_REFERRAL      
INTO #FINALTEMP       
FROM #FINALTEMP1 T      
WHERE @IS_ROLE_NULL = 1 OR t.Role_name = @ROLE      
      
 SET @CURRENT_PAGE = @CURRENT_PAGE-1              
 DECLARE @START_FROM INT = @CURRENT_PAGE * @RECORD_PER_PAGE              
 DECLARE @TOATL_PAGESUDM FLOAT       
      
 SELECT @TOATL_PAGESUDM = COUNT(*)              
 FROM #FINALTEMP              
 WHERE  (@SEARCH_STRING IS NULL OR ROLE_NAME  LIKE  '%' + @SEARCH_STRING +'%')OR      
  (@SEARCH_STRING IS NULL OR ASSIGNED  LIKE  '%' + @SEARCH_STRING +'%')OR      
  (@SEARCH_STRING IS NULL OR PENDING  LIKE  '%' + @SEARCH_STRING +'%')OR      
  (@SEARCH_STRING IS NULL OR COMPLETED  LIKE  '%' + @SEARCH_STRING +'%')OR      
  (@SEARCH_STRING IS NULL OR AVERAGE_RECIEVETO_COMLETIONTIME  LIKE  '%' + @SEARCH_STRING +'%'      
  --OR      
  --(@SEARCH_STRING IS NULL OR ASSIGNED_TO  LIKE  '%' + @SEARCH_STRING +'%'      
  )      
       
 IF (@RECORD_PER_PAGE = 0)      
 BEGIN      
  SET @RECORD_PER_PAGE = @TOATL_PAGESUDM      
 END      
 ELSE      
 BEGIN      
  SET @RECORD_PER_PAGE = @RECORD_PER_PAGE      
 END      
      
 DECLARE @TOTAL_RECORDS int =@TOATL_PAGESUDM              
 SET @TOATL_PAGESUDM = CEILING(@TOATL_PAGESUDM/@RECORD_PER_PAGE)            
           
 SELECT  distinct *,@TOATL_PAGESUDM AS TOTAL_RECORD_PAGES, @TOTAL_RECORDS AS TOTAL_RECORDS   into #JoharTemp      
 FROM   ( SELECT distinct  *         
   FROM #FINALTEMP           
   WHERE      
     (@SEARCH_STRING IS NULL OR ROLE_NAME  LIKE  '%' + @SEARCH_STRING +'%')OR      
     (@SEARCH_STRING IS NULL OR ASSIGNED  LIKE  '%' + @SEARCH_STRING +'%')OR      
     (@SEARCH_STRING IS NULL OR PENDING  LIKE  '%' + @SEARCH_STRING +'%')OR      
     (@SEARCH_STRING IS NULL OR COMPLETED  LIKE  '%' + @SEARCH_STRING +'%')OR      
     (@SEARCH_STRING IS NULL OR AVERAGE_RECIEVETO_COMLETIONTIME  LIKE  '%' + @SEARCH_STRING +'%')OR      
     (@SEARCH_STRING IS NULL OR ASSIGNED_USER  LIKE  '%' + @SEARCH_STRING +'%'      
     )      
      
  ) AS TASK_REPORT          
      
select   ROW_NUMBER() OVER(ORDER BY ROLE_NAME DESC) AS ROW, * from #JoharTemp      
           
 ORDER BY               
 case when @SORT_BY = 'ROLE_NAME' and @SORT_ORDER = 'ASC' then ROLE_NAME end ASC,              
 case when @SORT_BY = 'ROLE_NAME'  and @SORT_ORDER = 'DESC' then ROLE_NAME end DESC,      
  case when @SORT_BY = 'ASSIGNED_USER' and @SORT_ORDER = 'ASC' then ASSIGNED_USER end ASC,              
 case when @SORT_BY = 'ASSIGNED_USER'  and @SORT_ORDER = 'DESC' then ASSIGNED_USER end DESC,      
   case when @SORT_BY = 'ASSIGNED' and @SORT_ORDER = 'ASC' then ASSIGNED end ASC,              
 case when @SORT_BY = 'ASSIGNED'  and @SORT_ORDER = 'DESC' then ASSIGNED end DESC,      
   case when @SORT_BY = 'PENDING' and @SORT_ORDER = 'ASC' then PENDING end ASC,              
 case when @SORT_BY = 'PENDING'  and @SORT_ORDER = 'DESC' then PENDING end DESC,      
   case when @SORT_BY = 'COMPLETED' and @SORT_ORDER = 'ASC' then COMPLETED end ASC,              
 case when @SORT_BY = 'COMPLETED'  and @SORT_ORDER = 'DESC' then COMPLETED end DESC,      
   case when @SORT_BY = 'AVERAGE_RECIEVETO_COMLETIONTIME' and @SORT_ORDER = 'ASC' then AVERAGE_RECIEVETO_COMLETIONTIME end ASC,              
 case when @SORT_BY = 'AVERAGE_RECIEVETO_COMLETIONTIME'  and @SORT_ORDER = 'DESC' then AVERAGE_RECIEVETO_COMLETIONTIME end DESC      
 ,1 asc      
 OFFSET @START_FROM ROWS FETCH NEXT @RECORD_PER_PAGE ROWS ONLY       
      
      
      
      
END